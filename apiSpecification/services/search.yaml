openapi: 3.0.0
info:
  title: Search API
  description: Definition of the Search API for Github.
  version: 0.0.1
servers:
  - url: http://api.example.com/v1/github-service/
    description: Main (production) server
tags:
  public:
    name: Public
    description: Publicly available.
paths:
  /search:
    parameters:
      - $ref: '#/components/parameters/Query.Search.Name'
      - $ref: '#/components/parameters/Query.Pagination.Page'
      - $ref: '#/components/parameters/Query.Pagination.PerPage'
    get:
      tags:
        - public
      summary: Returns the result for given username.
      description: This is just a proxy API to get all the requied data for every search. The list of results for the given search param is encapsulated inside the results.
      operationId: search
      responses:
        200:
          description: A JSON array of the results
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response.Success'
                  - $ref: '#/components/schemas/Response.Search'
              examples:
                Successful:
                  $ref: '#/components/examples/Response.Search'
        400:
          description: The request did not adhere to the validation requirements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response.Error'
              examples:
                Invalid request Id:
                  $ref: '#/components/examples/Error400.InvalidRequestId'
                Missing name query param:
                  $ref: '#/components/examples/Search.Error400.MissingNameQuery'
                Invalid name query param:
                  $ref: '#/components/examples/Search.Error400.InvalidNameQuery'
                Invalid page query param:
                  $ref: '#/components/examples/Search.Error400.InvalidPageQuery'
                Invalid per page query param:
                  $ref: '#/components/examples/Search.Error400.InvalidPerPageQuery'
        403:
          description: The server understood the request, but is refusing to authorize it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response.Error'
              examples:
                Invalid endpoint:
                  $ref: '#/components/examples/Error403.InvalidEndpoint'
        500:
          description: Server side error during execution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response.Error'
              examples:
                Unable to execute query:
                  $ref: '#/components/examples/Search.Error500'
components:
  parameters:
    Query.Search.Name:
      in: query
      name: name
      required: true
      schema:
        type: integer
      description: The name of the user
    Query.Pagination.Page:
      in: query
      name: page
      schema:
        type: integer
      description: The number of pages to skip before starting to collect the result set
    Query.Pagination.PerPage:
      in: query
      name: perPage
      schema:
        type: integer
      description: The numbers of items to return

  examples:
    Response.Search:
      status: 200
      message: 'OK'
      items:
        - name: "gozmozdony"
          followers: 0
          following: 0
          profilePic: 'https://avatars.githubusercontent.com/u/5528598?v=4'
          url: 'https://github.com/gozmozdony'
    Error400.InvalidRequestId:
      status: 400
      message: Bad Request
      description: 'Invalid request ID format'
    Error403.InvalidEndpoint:
      status: 403
      message: Forbidden
      description: 'Forbidden'
    Search.Error500:
      status: 400
      message: Internal Server Error
      description: 'Error during fething results'
    Search.Error400.MissingNameQuery:
      status: 400
      message: Bad Request
      description: 'Missing name query param'
    Search.Error400.InvalidNameQuery:
      status: 400
      message: Bad Request
      description: 'Invalid request name query format'
    Search.Error400.InvalidPerPageQuery:
      status: 400
      message: Bad Request
      description: 'Invalid request per page query format'
    Search.Error400.InvalidPageQuery:
      status: 400
      message: Bad Request
      description: 'Invalid request page query format'
  schemas:
    Response.Success:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: integer
          description: Status code for the result.
        message:
          type: string
          description: Message describing the reason for the status code.
    Response.Error:
      type: object
      required:
        - status
        - message
        - description
      properties:
        status:
          type: integer
          description: Status code for the result.
        message:
          type: string
          description: Message describing the reason for the status code.
        description:
          oneOf:
            - type: string
              description: Description of the error.
            - type: array
              description: Descriptions of multiple errors.
              items:
                type: string
    Response.Search:
      type: object
      properties:
        totalCount:
          type: number
          example: 1
        items:
          type: array
          items:
            allOf:
              - type: object
                properties:
                  name:
                    type: string
                    example: 'gozmozdony'
                  followers:
                    type: number
                    example: 0
                  following:
                    type: number
                    example: 0
                  profilePic:
                    type: string
                    example: 'https://avatars.githubusercontent.com/u/5528598?v=4'
                  url:
                    type: string
                    example: 'https://github.com/gozmozdony'
